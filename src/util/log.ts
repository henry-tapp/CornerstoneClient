import * as loglevel from "loglevel";

if (import.meta.env.DEV) {
  // loglevel.setLevel("trace");
  loglevel.setDefaultLevel("DEBUG");
} else {
  // loglevel.setLevel("error");
  loglevel.setDefaultLevel("ERROR");
}

(window as any).setLogLevel = (
  level: loglevel.LogLevelDesc,
  persist?: boolean
) => loglevel.setLevel(level, persist);

/**
 * Helper function to log react-query (now called @tanstack/react-query) query
 * completion.
 *
 * @param queryKey The query key that settled, should likely be a pre-defined one from the `api/Queries.ts` file.
 * @param d The data the query settled/returned
 * @param err Any error that was potentially generated by the query
 * @returns undefined
 */
export const logQuerySettled = <Q, D, E>(queryKey: Q, d: D, err: E) => {
  if (err) {
    loglevel.debug(
      "%cQUERY:",
      "background-color: red; padding: 0.5rem;",
      queryKey,
      " - Error",
      err
    );
    return;
  }

  loglevel.debug(
    "%cQUERY:",
    "background-color: green; padding: 0.5rem;",
    queryKey,
    " - Success",
    d
  );
};

export default loglevel;
